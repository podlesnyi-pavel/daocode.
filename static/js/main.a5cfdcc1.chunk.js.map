{"version":3,"sources":["components/ListItems/ListItems.tsx","components/Sidebar/Sidebar.tsx","components/Workspace/Workspace.tsx","App.tsx","index.tsx"],"names":["ListItems","todos","chooseItem","className","map","todo","onClick","result","find","item","id","undefined","title","Sidebar","Workspace","currentItem","deleteItem","editItem","useState","isModalVisible","setIsModalVisible","isEditVisible","setIsEditVisible","userId","setId","setTitle","type","visible","onOk","onCancel","value","placeholder","onChange","event","Number","target","App","setTodos","setCurrentItem","showWorkspace","setShowWorkspace","useEffect","fetch","then","response","json","filter","console","log","newTodos","index","findIndex","splice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a5cfdcc1.chunk.js","sourcesContent":["import { Todo } from '../../types';\nimport './ListItems.scss';\n\ntype Props = {\n  todos: Todo[],\n  chooseItem: (item: Todo) => void,\n};\n\nexport const ListItems: React.FC<Props> = ({ todos, chooseItem }) => {\n  return (\n    <ul className=\"list\">\n    {todos.map((todo: Todo) => {\n      return (\n        <li\n          key={todo.id}\n          className=\"list__item\"\n          onClick={() => {\n            const result: Todo | undefined = todos.find(item => item.id === todo.id);\n            result !== undefined && chooseItem(result);\n          }}\n        >\n          <h3>{todo.id}</h3>\n          <div>{todo.title}</div>\n        </li>\n      );\n    })}\n  </ul>\n  );\n};\n","import { Todo } from '../../types';\nimport './sidebar.scss';\nimport { ListItems } from '../ListItems';\n\ntype Props = {\n  todos: Todo[],\n  chooseItem: (item: Todo) => void,\n};\n\nexport const Sidebar: React.FC<Props> = ({ todos, chooseItem }) => (\n  <div className=\"sidebar\">\n    <ListItems todos={todos} chooseItem={chooseItem} />\n  </div>\n);\n","import { ChangeEvent, useState } from 'react';\nimport { Todo } from '../../types';\nimport './workspace.scss';\nimport { Modal, Button } from 'antd';\n\ntype Props = {\n  currentItem: Todo,\n  deleteItem: (id: number) => void;\n  editItem: (item: Todo) => void;\n};\n\nexport const Workspace: React.FC<Props> = ({ currentItem, deleteItem, editItem }) => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [isEditVisible, setIsEditVisible] = useState(false);\n  const [userId, setId] = useState(currentItem.userId);\n  const [title, setTitle] = useState(currentItem.title);\n\n  const showEdit = () => {\n    setIsEditVisible(true);\n  };\n  const handleOkEdit = () => {\n    setIsEditVisible(false);\n\n    editItem({\n      ...currentItem,\n      userId,\n      title,\n    })\n\n    // fetch(`https://jsonplaceholder.typicode.com/todos/ + ${currentItem.id}`, {\n    //   method: 'PUT',\n    //   body: JSON.stringify({\n    //     id: currentItem.id,\n    //     title: 'foo',\n    //     body: 'bar',\n    //     userId: 1,\n    //   }),\n    //   headers: {\n    //     'Content-type': 'application/json; charset=UTF-8',\n    //   },\n    // })\n    // .then((response) => response.json())\n    // .then((json) => console.log(json));\n  };\n\n  const handleCancelEdit = () => {\n    setIsEditVisible(false);\n  };\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n\n    deleteItem(currentItem.id);\n\n    // fetch(`https://jsonplaceholder.typicode.com/todos/ + ${currentItem.id}`, {\n    //   method: 'DELETE',\n    // });\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const changeId = (event: ChangeEvent<HTMLInputElement>) => {\n    setId(Number(event.target.value));\n  };\n\n  const changeTitle = (event: ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n  };\n\n  return (\n    <div className=\"workspace\">\n  \n      {currentItem && (\n        <div>\n          <div>{currentItem.userId}</div>\n          <div>{currentItem.title}</div>\n  \n          <div className=\"workspace__buttons\">\n            <Button\n                type=\"primary\"\n                onClick={showEdit}\n              >\n              Edit\n            </Button>\n            <Modal title=\"Edit\" visible={isEditVisible} onOk={handleOkEdit} onCancel={handleCancelEdit}>\n              <input\n                type=\"number\"\n                value={userId} placeholder=\"id\"\n                onChange={changeId}\n              />\n              <input\n                type=\"text\"\n                value={title} placeholder=\"title\"\n                onChange={changeTitle}\n              />\n            </Modal>\n  \n            <Button\n              type=\"primary\"\n              onClick={showModal}\n            >\n              Delete\n            </Button>\n            <Modal title=\"Delete?\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel} />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\r\nimport './app.scss';\r\nimport { Sidebar } from './components/Sidebar';\r\nimport { Workspace } from './components/Workspace';\r\nimport { Todo } from './types';\r\n\r\nconst App: React.FC = () => {\r\n  const [todos, setTodos] = useState<Todo[]>([]);\r\n  const [currentItem, setCurrentItem] = useState<Todo | null>(null);\r\n  const [showWorkspace, setShowWorkspace] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetch('https://jsonplaceholder.typicode.com/todos')\r\n      .then(response => response.json())\r\n      .then(response => setTodos(response));\r\n  }, []);\r\n\r\n  const chooseItem = (item: Todo) => {\r\n    setCurrentItem(item);\r\n    setShowWorkspace(true);\r\n  }\r\n\r\n  const deleteItem = (id: number = 0) => {\r\n    setTodos(todos.filter((item: Todo) => item.id !== id));\r\n    setShowWorkspace(false);\r\n  }\r\n\r\n  const editItem = (item: Todo) => {\r\n    console.log(todos);\r\n    console.log(item);\r\n    const newTodos = [...todos];\r\n    const index = todos.findIndex((todo: Todo) => todo.id === item.id);\r\n    setTodos(newTodos.splice(index, 1, item));\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Sidebar todos={todos} chooseItem={chooseItem} />\r\n      {currentItem && showWorkspace && (\r\n        <Workspace\r\n          currentItem={currentItem}\r\n          deleteItem={deleteItem}\r\n          editItem={editItem}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n} \r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'antd/dist/antd.css';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}