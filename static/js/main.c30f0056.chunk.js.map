{"version":3,"sources":["components/ListItems/ListItems.tsx","components/Sidebar/Sidebar.tsx","components/Workspace/Workspace.tsx","App.tsx","index.tsx"],"names":["ListItems","todos","chooseItem","className","map","todo","onClick","result","find","item","id","undefined","title","Sidebar","confirm","Modal","Workspace","currentItem","deleteItem","editItem","useState","isEditVisible","setIsEditVisible","userId","setId","setTitle","type","visible","onOk","onCancel","value","placeholder","onChange","event","Number","target","icon","ExclamationCircleOutlined","okText","okType","cancelText","App","setTodos","setCurrentItem","showWorkspace","setShowWorkspace","isAddVisible","setIsAddVisible","setUserId","dbRef","useRef","useEffect","openRequest","indexedDB","open","onupgradeneeded","console","log","current","objectStoreNames","contains","createObjectStore","keyPath","autoIncrement","onerror","onsuccess","tasks","transaction","objectStore","getAll","addTasks1","task","length","completed","request","add","action","method","required","filter","newObject","positionItemToChange","findIndex","item1","index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c30f0056.chunk.js","sourcesContent":["import { Todo } from '../../types';\nimport './ListItems.scss';\n\ntype Props = {\n  todos: Todo[],\n  chooseItem: (item: Todo) => void,\n};\n\nexport const ListItems: React.FC<Props> = ({ todos, chooseItem }) => {\n  return (\n    <ul className=\"list\">\n    {todos.map((todo: Todo) => {\n      return (\n        <li\n          key={todo.id}\n          className=\"list__item\"\n          onClick={() => {\n            const result: Todo | undefined = todos.find(item => item.id === todo.id);\n            result !== undefined && chooseItem(result);\n          }}\n        >\n          <h3>{todo.id}</h3>\n          <div>{todo.title}</div>\n        </li>\n      );\n    })}\n  </ul>\n  );\n};\n","import { Todo } from '../../types';\nimport './sidebar.scss';\nimport { ListItems } from '../ListItems';\n\ntype Props = {\n  todos: Todo[],\n  chooseItem: (item: Todo) => void,\n};\n\nexport const Sidebar: React.FC<Props> = ({ todos, chooseItem }) => (\n  <div className=\"sidebar\">\n    <ListItems todos={todos} chooseItem={chooseItem} />\n  </div>\n);\n","import { ChangeEvent, useState } from 'react';\nimport { Todo } from '../../types';\nimport { Modal, Button } from 'antd';\n\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\n\nconst { confirm } = Modal;\n\ntype Props = {\n  currentItem: Todo,\n  deleteItem: (id: number) => void;\n  editItem: (item: Todo) => void;\n};\n\nexport const Workspace: React.FC<Props> = ({ currentItem, deleteItem, editItem }) => {\n  const [isEditVisible, setIsEditVisible] = useState(false);\n  const [userId, setId] = useState(currentItem.userId);\n  const [title, setTitle] = useState(currentItem.title);\n\n  const showEdit = () => {\n    setIsEditVisible(true);\n  };\n  const handleOkEdit = () => {\n    setIsEditVisible(false);\n\n    editItem({\n      ...currentItem,\n      userId,\n      title,\n    })\n  };\n\n  const handleCancelEdit = () => {\n    setIsEditVisible(false);\n  };\n\n  const changeId = (event: ChangeEvent<HTMLInputElement>) => {\n    setId(Number(event.target.value));\n  };\n\n  const changeTitle = (event: ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n  };\n\n  \n  function showDeleteConfirm() {\n    confirm({\n      title: 'Are you sure delete this task?',\n      icon: <ExclamationCircleOutlined />,\n      okText: 'Yes',\n      okType: 'danger',\n      cancelText: 'No',\n      onOk() {\n        deleteItem(currentItem.id);\n      },\n    });\n  }\n\n  return (\n    <div className=\"workspace\">\n  \n      {currentItem && (\n        <div>\n          <div>{currentItem.userId}</div>\n          <div>{currentItem.title}</div>\n  \n          <div className=\"workspace__buttons\">\n            <Button\n                type=\"primary\"\n                onClick={showEdit}\n              >\n              Edit\n            </Button>\n            <Modal title=\"Edit\" visible={isEditVisible} onOk={handleOkEdit} onCancel={handleCancelEdit}>\n              <input\n                type=\"number\"\n                value={userId} placeholder=\"id\"\n                onChange={changeId}\n              />\n              <input\n                type=\"text\"\n                value={title} placeholder=\"title\"\n                onChange={changeTitle}\n              />\n            </Modal>\n  \n            <Button onClick={showDeleteConfirm} type=\"dashed\">\n              Delete\n            </Button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { ChangeEvent, useEffect, useState, useRef} from 'react';\r\nimport './app.scss';\r\nimport { Sidebar } from './components/Sidebar';\r\nimport { Workspace } from './components/Workspace';\r\nimport { Todo } from './types';\r\nimport { Modal, Button } from 'antd';\r\n\r\nconst App: React.FC = () => {\r\n  const [todos, setTodos] = useState<Todo[]>([]);\r\n  const [currentItem, setCurrentItem] = useState<Todo | null>(null);\r\n  const [showWorkspace, setShowWorkspace] = useState(true);\r\n  const [isAddVisible, setIsAddVisible] = useState(false);\r\n  const [userId, setUserId] = useState(1);\r\n  const [title, setTitle] = useState('');\r\n  // const [db, setDb] = useState<IDBDatabase>({} as any as IDBDatabase);\r\n\r\n  const dbRef = useRef<IDBDatabase>();\r\n  \r\n  useEffect(() => {\r\n    // fetch('https://jsonplaceholder.typicode.com/todos')\r\n    // .then(response => response.json())\r\n    // .then(response => setTodos(response));\r\n    \r\n    let openRequest = indexedDB.open('tasks', 1);\r\n\r\n    openRequest.onupgradeneeded = function() {\r\n      console.log('open db - onupgradeneeded');\r\n      dbRef.current = openRequest.result;\r\n      \r\n\r\n      if (!dbRef.current.objectStoreNames.contains('tasks')) {\r\n        dbRef.current.createObjectStore('tasks', {keyPath: 'task', autoIncrement: true});\r\n      }\r\n    }\r\n\r\n    openRequest.onerror = function() {\r\n      console.log('open db request - onerror');\r\n    };\r\n\r\n    openRequest.onsuccess = function(event: any) {\r\n      console.log('open db request - onsuccess');\r\n\r\n      dbRef.current = event.target.result;\r\n      const transaction = event.target.result.transaction(['tasks']);\r\n\r\n      const tasks = transaction.objectStore(\"tasks\");\r\n      // @ts-ignore\r\n      tasks.getAll.onsuccess = function(event: any) {\r\n        console.log(tasks.getAll());\r\n        setTodos(event.target.value);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const chooseItem = (item: Todo) => {\r\n    setCurrentItem(item);\r\n    setShowWorkspace(true);\r\n  }\r\n\r\n  const deleteItem = (id: number = 0) => {\r\n    setTodos(todos.filter((item: Todo) => item.id !== id));\r\n    setShowWorkspace(false);\r\n  }\r\n\r\n  const editItem = (newObject: Todo) => {\r\n    const positionItemToChange = todos.findIndex((todo: Todo) => todo.id === newObject.id);\r\n    setTodos(todos.map((item1, index) => {\r\n      if (positionItemToChange === index) {\r\n        return newObject;\r\n      }\r\n\r\n      return item1;\r\n    }));\r\n\r\n    setCurrentItem(newObject);\r\n  };\r\n\r\n  const showModal = () => {\r\n    setIsAddVisible(true);\r\n  };\r\n\r\n  const handleOkAdd = () => {\r\n    setIsAddVisible(false);\r\n\r\n    addTasks1();\r\n  };\r\n\r\n  const handleCancelAdd = () => {\r\n    setIsAddVisible(false);\r\n  };\r\n\r\n  const addTasks1 = () =>  {\r\n    const transaction: any = dbRef.current?.transaction('tasks', 'readwrite');\r\n    const tasks = transaction.objectStore('tasks');\r\n  \r\n    const task = {\r\n      userId: userId,\r\n        id: todos.length + 1,\r\n        title: title,\r\n        completed: false\r\n    };\r\n  \r\n    const request = tasks.add(task);\r\n    setTodos([\r\n      ...todos,\r\n      task,\r\n    ])\r\n  \r\n    request.onsuccess = function() {\r\n      console.log('Записано');\r\n    }\r\n  \r\n    request.onerror = function() {\r\n      console.log('Ошибка записи');\r\n    }\r\n  }\r\n\r\n  // const addTasks = () =>  {\r\n  //   setTodos([\r\n  //     ...todos,\r\n  //     {\r\n  //       userId: userId,\r\n  //       id: todos.length + 1,\r\n  //       title: title,\r\n  //       completed: false\r\n  //     }\r\n  //   ])\r\n  // }\r\n\r\n  const handleChangeTitle = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setTitle(event.target.value);\r\n  };\r\n\r\n  const handleChangeUserId = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setUserId(+event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Sidebar todos={todos} chooseItem={chooseItem} />\r\n      <div className=\"App__work\">\r\n        <Modal title=\"Новая заметка\" visible={isAddVisible} onOk={handleOkAdd} onCancel={handleCancelAdd}>\r\n          <form action=\"#\" method=\"GET\">\r\n            <input\r\n              type=\"number\"\r\n              value={userId} placeholder=\"userId\"\r\n              onChange={handleChangeUserId}\r\n              required={true}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              value={title} placeholder=\"Заметка\"\r\n              onChange={handleChangeTitle}\r\n              required={true}\r\n            />\r\n          </form>\r\n        </Modal>\r\n\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={showModal}\r\n        >\r\n          Новая заметка\r\n        </Button>\r\n        {currentItem && showWorkspace && (\r\n          <Workspace\r\n            currentItem={currentItem}\r\n            deleteItem={deleteItem}\r\n            editItem={editItem}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n} \r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'antd/dist/antd.css';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}