{"version":3,"sources":["context.ts","components/ListItems/ListItems.tsx","components/Sidebar/Sidebar.tsx","components/Workspace/Workspace.tsx","App.tsx","index.tsx"],"names":["Context","React","createContext","chooseItem","item","deleteItem","id","editItem","ListItems","todos","useContext","className","map","todo","onClick","result","find","undefined","title","Sidebar","confirm","Modal","Workspace","currentItem","useState","isEditVisible","setIsEditVisible","userId","setId","setTitle","type","visible","onOk","onCancel","value","placeholder","onChange","event","Number","target","icon","ExclamationCircleOutlined","okText","okType","cancelText","App","setTodos","setCurrentItem","showWorkspace","setShowWorkspace","isAddVisible","setIsAddVisible","setUserId","dbRef","useRef","useEffect","openRequest","indexedDB","open","onupgradeneeded","current","objectStoreNames","contains","createObjectStore","keyPath","autoIncrement","onerror","alert","onsuccess","transaction","objectStore","getAll","showModal","addTasks","tasks","task","length","completed","request","add","Provider","filter","delete","console","log","newObject","positionItemToChange","findIndex","index","clear","positionToChange","newTodos","forEach","action","method","required","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fa21e815.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from './types';\n\nexport const Context = React.createContext({\n  chooseItem: (item: Todo) => {},\n  deleteItem: (id: number) => {},\n  editItem: (item: Todo) => {},\n});\n","import { useContext } from 'react';\nimport { Todo } from '../../types';\nimport './ListItems.scss';\nimport { Context } from '../../context';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const ListItems: React.FC<Props> = ({ todos }) => {\n  const { chooseItem } = useContext<any>(Context)\n  \n  return (\n    <ul className=\"list\">\n    {todos.map((todo: Todo) => {\n      return (\n        <li\n          key={todo.id}\n          className=\"list__item\"\n          onClick={() => {\n            const result: Todo | undefined = todos.find(item => item.id === todo.id);\n            result !== undefined && chooseItem(result);\n          }}\n        >\n          <h3>{todo.id}</h3>\n          <div>{todo.title}</div>\n        </li>\n      );\n    })}\n  </ul>\n  );\n};\n","import { Todo } from '../../types';\nimport './sidebar.scss';\nimport { ListItems } from '../ListItems';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const Sidebar: React.FC<Props> = ({ todos }) => (\n  <div className=\"sidebar\">\n    <ListItems todos={todos} />\n  </div>\n);\n","import { ChangeEvent, useContext, useState } from 'react';\nimport { Todo } from '../../types';\nimport { Modal, Button } from 'antd';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { Context } from '../../context';\n\nconst { confirm } = Modal;\n\ntype Props = {\n  currentItem: Todo,\n};\n\nexport const Workspace: React.FC<Props> = ({ currentItem }) => {\n  const [isEditVisible, setIsEditVisible] = useState(false);\n  const [userId, setId] = useState(currentItem.userId);\n  const [title, setTitle] = useState(currentItem.title);\n\n  const { deleteItem, editItem } = useContext<any>(Context)\n\n  const showEdit = () => {\n    setIsEditVisible(true);\n  };\n  const handleOkEdit = () => {\n    setIsEditVisible(false);\n\n    editItem({\n      ...currentItem,\n      userId,\n      title,\n    })\n  };\n\n  const handleCancelEdit = () => {\n    setIsEditVisible(false);\n  };\n\n  const changeId = (event: ChangeEvent<HTMLInputElement>) => {\n    setId(Number(event.target.value));\n  };\n\n  const changeTitle = (event: ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n  };\n\n  \n  function showDeleteConfirm() {\n    confirm({\n      title: 'Are you sure delete this task?',\n      icon: <ExclamationCircleOutlined />,\n      okText: 'Yes',\n      okType: 'danger',\n      cancelText: 'No',\n      onOk() {\n        deleteItem(currentItem.id);\n      },\n    });\n  }\n\n  return (\n    <div className=\"workspace\">\n  \n      {currentItem && (\n        <div>\n          <div>{currentItem.userId}</div>\n          <div>{currentItem.title}</div>\n  \n          <div className=\"workspace__buttons\">\n            <Button\n                type=\"primary\"\n                onClick={showEdit}\n              >\n              Edit\n            </Button>\n            <Modal title=\"Edit\" visible={isEditVisible} onOk={handleOkEdit} onCancel={handleCancelEdit}>\n              <input\n                type=\"number\"\n                value={userId} placeholder=\"id\"\n                onChange={changeId}\n              />\n              <input\n                type=\"text\"\n                value={title} placeholder=\"title\"\n                onChange={changeTitle}\n              />\n            </Modal>\n  \n            <Button onClick={showDeleteConfirm} type=\"dashed\">\n              Delete\n            </Button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { ChangeEvent, useEffect, useState, useRef} from 'react';\r\nimport './app.scss';\r\nimport { Sidebar } from './components/Sidebar';\r\nimport { Workspace } from './components/Workspace';\r\nimport { Todo } from './types';\r\nimport { Modal, Button } from 'antd';\r\nimport { Context } from './context';\r\n\r\nconst App: React.FC = () => {\r\n  const [todos, setTodos] = useState<Todo[]>([]);\r\n  const [currentItem, setCurrentItem] = useState<Todo | null>(null);\r\n  const [showWorkspace, setShowWorkspace] = useState(true);\r\n  const [isAddVisible, setIsAddVisible] = useState(false);\r\n  const [userId, setUserId] = useState(1);\r\n  const [title, setTitle] = useState('');\r\n\r\n  const dbRef = useRef<IDBDatabase>();\r\n  \r\n  useEffect(() => {\r\n    let openRequest = indexedDB.open('tasks', 1);\r\n\r\n    openRequest.onupgradeneeded = function() {\r\n      dbRef.current = openRequest.result;\r\n      \r\n      if (!dbRef.current.objectStoreNames.contains('tasks')) {\r\n        dbRef.current.createObjectStore('tasks', {keyPath: 'task', autoIncrement: true});\r\n      }\r\n    }\r\n\r\n    openRequest.onerror = function() {\r\n      alert('Не удалось получить доступ к IndexedDB');\r\n    };\r\n\r\n    openRequest.onsuccess = function(event: any) {\r\n      dbRef.current = event.target.result;\r\n      const transaction = event.target.result.transaction('tasks', 'readonly');\r\n      const tasks = transaction.objectStore(\"tasks\").getAll();\r\n      tasks.onsuccess = function(event: any) {\r\n        setTodos(event.target.result);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const chooseItem = (item: Todo) => {\r\n    setCurrentItem(item);\r\n    setShowWorkspace(true);\r\n  }\r\n\r\n  const deleteItem = (id: number = 0) => {\r\n    setTodos(todos.filter((item: Todo) => item.id !== id));\r\n    setShowWorkspace(false);\r\n\r\n    let transaction = dbRef.current?.transaction(\"tasks\", \"readwrite\");\r\n    let tasks = transaction?.objectStore(\"tasks\");\r\n    tasks?.delete(id);\r\n    console.log('delete');\r\n  }\r\n\r\n  const editItem = (newObject: Todo) => {\r\n    const positionItemToChange = todos.findIndex((todo: Todo) => todo.id === newObject.id);\r\n    setTodos(todos.map((item, index) => {\r\n      if (positionItemToChange === index) {\r\n        return newObject;\r\n      }\r\n\r\n      return item;\r\n    }));\r\n\r\n    setCurrentItem(newObject);\r\n\r\n    let openRequest = indexedDB.open('tasks', 1);\r\n\r\n    openRequest.onupgradeneeded = function() {\r\n      dbRef.current = openRequest.result;\r\n      \r\n      if (!dbRef.current.objectStoreNames.contains('tasks')) {\r\n        dbRef.current.createObjectStore('tasks', {keyPath: 'task', autoIncrement: true});\r\n      }\r\n    }\r\n\r\n    openRequest.onerror = function() {\r\n      alert('Не удалось получить доступ к IndexedDB');\r\n    };\r\n\r\n    openRequest.onsuccess = function(event: any) {\r\n      dbRef.current = event.target.result;\r\n      const transaction = event.target.result.transaction('tasks', 'readwrite');\r\n      const tasks = transaction.objectStore(\"tasks\");\r\n      tasks.clear();\r\n      console.log('удаленно');\r\n      const positionToChange = todos.findIndex(item => item.id === newObject.id);\r\n\r\n      const newTodos = todos.map((todo, index) => {\r\n        if (index === positionToChange) {\r\n          return newObject;\r\n        }\r\n        return todo;\r\n      }); \r\n      console.log(newTodos);\r\n\r\n      newTodos.forEach(item => tasks.add(item));\r\n      setTodos(newTodos);\r\n    }\r\n\r\n    // const objTrans = dbRef.current?.transaction(\"tasks\", \"readwrite\");\r\n    // const objStore = objTrans?.objectStore('tasks');\r\n    // const objKeyRange = IDBKeyRange.only(newObject.id);\r\n    // const objCursor = objStore?.openCursor(objKeyRange);\r\n\r\n    // if (objCursor) {\r\n    //   objCursor.onsuccess = function(event: any) {\r\n    //     const cursor = event.target.result;\r\n    //     const objRequest = cursor.update({\r\n    //       ...newObject,\r\n    //       userId,\r\n    //       title,\r\n    //     });\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  const showModal = () => {\r\n    setIsAddVisible(true);\r\n  };\r\n\r\n  const handleOkAdd = () => {\r\n    setIsAddVisible(false);\r\n\r\n    addTasks();\r\n  };\r\n\r\n  const handleCancelAdd = () => {\r\n    setIsAddVisible(false);\r\n  };\r\n\r\n  const addTasks = () =>  {\r\n    if (title !== '') {\r\n      const transaction: any = dbRef.current?.transaction('tasks', 'readwrite');\r\n      const tasks = transaction.objectStore('tasks');\r\n    \r\n      const task = {\r\n        userId: userId,\r\n          id: todos.length + 1,\r\n          title: title,\r\n          completed: false\r\n      };\r\n    \r\n      const request = tasks.add(task);\r\n      setTodos([\r\n        ...todos,\r\n        task,\r\n      ])\r\n    \r\n      request.onsuccess = function() {\r\n        setUserId(1);\r\n        setTitle('');\r\n      }\r\n    \r\n      request.onerror = function() {\r\n        alert('Не удалось добавить заметку');\r\n      }\r\n    } else {\r\n      showModal();\r\n    }\r\n  }\r\n\r\n  const handleChangeTitle = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setTitle(event.target.value);\r\n  };\r\n\r\n  const handleChangeUserId = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setUserId(+event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Context.Provider value={{\r\n      chooseItem, deleteItem, editItem,\r\n    }}>\r\n      <div className=\"App\">\r\n        <Sidebar todos={todos} />\r\n        <div className=\"App__work\">\r\n          <Modal title=\"Новая заметка\" visible={isAddVisible} onOk={handleOkAdd} onCancel={handleCancelAdd}>\r\n            <form action=\"#\" method=\"GET\">\r\n              <input\r\n                type=\"number\"\r\n                value={userId} placeholder=\"userId\"\r\n                onChange={handleChangeUserId}\r\n                required={true}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                value={title} placeholder=\"Заметка\"\r\n                onChange={handleChangeTitle}\r\n                required={true}\r\n              />\r\n            </form>\r\n          </Modal>\r\n  \r\n          <Button\r\n            type=\"primary\"\r\n            onClick={showModal}\r\n          >\r\n            Новая заметка\r\n          </Button>\r\n          {currentItem && showWorkspace && (\r\n            <Workspace\r\n              currentItem={currentItem}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Context.Provider>\r\n  );\r\n} \r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'antd/dist/antd.css';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}